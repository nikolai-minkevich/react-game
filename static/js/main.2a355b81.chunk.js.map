{"version":3,"sources":["UI/Cell/style.module.css","UI/Board/style.module.css","UI/Footer/style.module.css","UI/Layout/style.module.css","UI/Message/style.module.css","UI/Button/style.module.css","UI/Layout/Layout.js","UI/Layout/index.js","UI/Cell/Cell.js","UI/Cell/index.js","UI/Board/index.js","UI/Board/Board.js","UI/Footer/logo-rs.png","UI/Footer/Footer.js","UI/Message/index.js","UI/Message/Message.js","UI/Button/index.js","UI/Button/Button.js","App.js","Logic/Logic.js","reportWebVitals.js","index.js"],"names":["module","exports","Layout","children","this","props","className","s","layout","React","PureComponent","defaultProps","cn","require","Cell","value","onClick","x","y","selected","classes","cell","data-x","data-y","Board","event","cells","selectedCells","board","map","cellsRow","indexRow","row","indexCell","length","i","handleCellClick","bind","Footer","footer","container","href","src","logo","alt","Message","message","Button","button","App","state","getNewGame","Array","fill","nextTurn","isWin","undefined","target","dataset","newNextTurn","setState","newCells","parseInt","newIsWin","rowSum","j","push","Math","abs","type","winner","columnSum","diagonalSum","isDraw","checkDraw","checkWin","console","log","handleBoardClick","handleRestartClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","Helmet","document","getElementById"],"mappings":"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","file":"react-game/static/js/main.2a355b81.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"cell\":\"style_cell__IKPd9\",\"selected\":\"style_selected__3kRam\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"board\":\"style_board__2GPzz\",\"row\":\"style_row__2gWqr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"style_container__314_4\",\"footer\":\"style_footer__37GT_\",\"footer_img\":\"style_footer_img__21fny\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"layout\":\"style_layout__1YIH4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"style_message__JchRN\",\"win\":\"style_win__3Oudc\",\"fail\":\"style_fail__2R9As\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"style_button__3etLJ\"};","import React from 'react';\nimport s from './style.module.css';\n\nclass Layout extends React.PureComponent {\n  static defaultProps = {};\n  render(){\n    const { children } = this.props\n    return <div className={s.layout}>{children}</div>;\n  }\n}\n\nexport default Layout;","import Layout from \"./Layout\";\nexport default Layout;\n","import React from \"react\";\nimport s from \"./style.module.css\";\nconst cn = require(\"classnames\");\n\nclass Cell extends React.PureComponent {\n  render() {\n    const { value, onClick, x, y, selected } = this.props;\n    let classes = cn(s.cell, selected ? s.selected : null);\n    return (\n      <div className={classes} onClick={onClick} data-x={x} data-y={y}>\n        {value == null ? \"\" : value > 0 ? \"X\" : \"O\"}\n      </div>\n    );\n  }\n}\n\nexport default Cell;\n","import Cell from \"./Cell.js\";\nexport default Cell;\n","import Board from \"./Board\";\nexport default Board;\n","import React from \"react\";\nimport Cell from \"../Cell\";\nimport s from \"./style.module.css\";\n\nclass Board extends React.PureComponent {\n  handleCellClick(event) {\n    const { onClick } = this.props;\n    onClick(event);\n  }\n  render() {\n    const { cells, selectedCells = [] } = this.props;\n    return (\n      <>\n        <div className={s.board}>\n          {cells.map((cellsRow, indexRow) => {\n            return (\n              <>\n                <div className={s.row}>\n                  {cellsRow.map((cell, indexCell) => {\n                    let selected = false;\n                    if (selectedCells.length > 0) {\n                      for (let i = 0; i < selectedCells.length; i++) {\n                        if (selectedCells[i][0] == indexRow && selectedCells[i][1] == indexCell) {\n                          selected = true;\n                        }\n                      }\n                    }\n\n                    return <Cell value={cell} onClick={this.handleCellClick.bind(this)} x={indexRow} y={indexCell} selected={selected} />;\n                  })}\n                </div>\n              </>\n            );\n          })}\n        </div>\n      </>\n    );\n  }\n}\n\nexport default Board;\n","export default __webpack_public_path__ + \"react-game/static/media/logo-rs.b1ebf52c.png\";","import React from \"react\";\nimport s from \"./style.module.css\";\nimport logo from \"./logo-rs.png\";\n\nclass Footer extends React.PureComponent {\n  render() {\n    return (\n      <footer className={s.footer}>\n        <div className={s.container}>\n          <span><a href=\"https://github.com/nikolai-minkevich\">Minkevich Nikolai</a>, 2021</span>\n          <a href=\"https://rs.school\">\n            <img src={logo} alt=\"RSSchool Logo\" />\n          </a>\n          \n        </div>\n      </footer>\n    );\n  }\n}\n\nexport default Footer;\n","import Message from \"./Message\";\nexport default Message;\n","import React from \"react\";\nimport s from \"./style.module.css\";\n// const cn = require(\"classnames\");\n\nclass Message extends React.PureComponent {\n  render() {\n    const { children } = this.props;\n    return <div className={s.message}>{children}</div>;\n  }\n}\n\nexport default Message;\n","import Button from \"./Button\";\nexport default Button;\n","import React from \"react\";\nimport s from \"./style.module.css\";\n\nclass Button extends React.PureComponent{\n  render(){\n    const { onClick,children } = this.props;\n    return <div className={s.button} onClick={onClick}>{children}</div>\n  }\n}\n\nexport default Button","import React from \"react\";\nimport s from \"./App.css\";\nimport Layout from \"./UI/Layout\";\nimport Board from \"./UI/Board\";\nimport Footer from \"./UI/Footer\";\nimport Message from \"./UI/Message\";\nimport { checkWin } from \"./Logic/Logic.js\";\nimport Button from \"./UI/Button\";\n\nclass App extends React.PureComponent {\n  state = this.getNewGame();\n\n  getNewGame() {\n    return {\n      cells: new Array(3).fill(new Array(3).fill(null)),\n      nextTurn: 1, // 1 - X, -1 - O\n      isWin: false,\n      //mode\n      //stats\n    };\n  }\n\n  handleBoardClick(event) {\n    const { isWin } = this.state;\n    if (isWin === false || isWin === undefined) {\n      let { x, y } = event.target.dataset;\n      let { nextTurn } = this.state;\n      let newNextTurn = nextTurn;\n      this.setState((state) => {\n        let newCells = state.cells.map((cellsRow, indexRow) =>\n          cellsRow.map((cell, indexCell) => {\n            if (indexRow === parseInt(x) && indexCell === parseInt(y) && cell === null) {\n              newNextTurn = nextTurn * -1;\n              return nextTurn;\n            } else {\n              return cell;\n            }\n          })\n        );\n        let newIsWin = false;\n        if (newNextTurn !== nextTurn) {\n          newIsWin = checkWin(newCells);\n        }\n        return { cells: newCells, nextTurn: newNextTurn, isWin: newIsWin };\n      });\n    }\n  }\n\n  handleRestartClick(event) {\n    console.log(\"Restart\");\n    this.setState(() => {\n      return this.getNewGame();\n    });\n  }\n  render() {\n    const { cells, nextTurn, isWin } = this.state;\n    const { type, selectedCells, winner } = isWin;\n    let message = null;\n    if (isWin !== false) {\n      if (type === \"draw\") {\n        message = <Message>Draw!</Message>;\n      } else {\n        if (winner > 0) {\n          message = <Message>Crosses win!</Message>;\n        } else {\n          message = <Message>Noughts win!</Message>;\n        }\n      }\n    }\n\n    return (\n      <>\n        <div className={s.App}></div>\n\n        <Layout>\n          {/* New Game, Score */}\n          <Board cells={cells} onClick={this.handleBoardClick.bind(this)} selectedCells={selectedCells} />\n          <div className=\"stat\">\n            {message}\n            <div className=\"nextTurn\">Next turn: {nextTurn > 0 ? \"X\" : \"O\"}</div>\n            <Button onClick={this.handleRestartClick.bind(this)}>Restart</Button>\n          </div>\n        </Layout>\n        <Footer />\n      </>\n    );\n  }\n}\n\nexport default App;\n","export function checkWin(cells) {\n  let selectedCells = [];\n  // check row\n  for (let i = 0; i < cells.length; i++) {\n    let rowSum = 0;\n    selectedCells = [];\n    for (let j = 0; j < cells[i].length; j++) {\n      rowSum += cells[i][j];\n      selectedCells.push([i, j]);\n    }\n    if (Math.abs(rowSum) === 3) {\n      return { type: \"row\",  winner: rowSum / 3, selectedCells: selectedCells };\n    }\n  }\n  // check column\n  for (let i = 0; i < cells.length; i++) {\n    let columnSum = 0;\n    selectedCells = [];\n    for (let j = 0; j < cells[i].length; j++) {\n      columnSum += cells[j][i];\n      selectedCells.push([j, i]);\n    }\n    if (Math.abs(columnSum) === 3) {\n      return { type: \"column\", winner: columnSum / 3, selectedCells: selectedCells };\n    }\n  }\n  // check diagonal\n  let diagonalSum = cells[0][0] + cells[1][1] + cells[2][2];\n  if (Math.abs(diagonalSum) === 3) {\n    selectedCells = [[0,0], [1,1], [2,2]];\n    return { type: \"diagonal\",  winner: diagonalSum / 3, selectedCells: selectedCells };\n  }\n  diagonalSum = cells[2][0] + cells[1][1] + cells[0][2];\n  if (Math.abs(diagonalSum) === 3) {\n    selectedCells = [[0,0], [1,1], [2,2]];\n    return { type: \"diagonal\",  winner: diagonalSum / 3, selectedCells: selectedCells };\n  }\n\n  if (checkDraw(cells)) {\n    return { type: \"draw\" };\n  }\n\n  return false;\n}\n\nexport function checkDraw(cells) {\n  let isDraw = true;\n  cells.map((cellsRow) =>\n    cellsRow.map((cell) => {\n      if (cell === null) {\n        isDraw = false;\n      }\n      return cell;\n    })\n  );\n  return isDraw;\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Helmet } from \"react-helmet\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Helmet>\n      <title>X-O-X</title>\n    </Helmet>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}